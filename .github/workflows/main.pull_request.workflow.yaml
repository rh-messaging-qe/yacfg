---
name: "Pull Request verification"

on:
  pull_request:
    branches:
      - main

jobs:
  Tests:
    name: "Tests | ${{ matrix.os }} | Python ${{ matrix.python-version }}"
    env:
      USING_COVERAGE: '3.11'
      USING_DOCS: '3.11'
      USING_DIST: '3.11'

    strategy:
      fail-fast: false
      matrix:
        os: ["Ubuntu"]
        python-version: ["3.11", "pypy-3.10", "pypy-3.9"]
    runs-on: "${{ matrix.os }}-latest"

    steps:
      - uses: "actions/checkout@v4"

      - name: "Set up Python ${{ matrix.python-version }}"
        uses: "actions/setup-python@v5.1.0"
        id: full-python-version
        with:
          python-version: "${{ matrix.python-version }}"

      - uses: "abatilo/actions-poetry@v3.0.0"

      - name: "Install dependencies"
        run: |
          python -VV
          python -m site
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade coverage[toml] tox tox-gh-actions
          poetry install

      - name: "Run tox targets for ${{ matrix.python-version }}"
        run: tox

      - name: "Upload docs artifacts"
        uses: actions/upload-artifact@v4
        if: "contains(env.USING_DOCS, matrix.python-version)"
        with:
          name: docs
          path: docs/_build/html

      - name: "Build package"
        run: |
          poetry build

      - name: "Upload dist artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: package-dist-${{ runner.os }}-${{ steps.full-python-version.outputs.python-version }}
          path: dist/

      - name: "Run help"
        run: "poetry run yacfg --help"

      - name: "Run the test script"
        run: ./profile_test.sh

